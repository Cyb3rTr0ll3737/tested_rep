---
- name: Получаем данные про всех пользователей системы
  become: true
  ansible.builtin.getent:
    database: passwd
  register: passwd_output

- name: Инициализируем пустой список пользователей
  ansible.builtin.set_fact:
    all_users: []

- name: Превращаем в список словарей
  ansible.builtin.set_fact:
    all_users:
      "{{ all_users +
        [{
            'name': item.key,
            'x': item.value[0],
            'uid': item.value[1],
            'gid': item.value[2],
            'gcos': item.value[3],
            'dir': item.value[4],
            'shell': item.value[5]
          }]
        }}"
  loop: "{{ passwd_output.ansible_facts.getent_passwd | dict2items }}"

- name: Фильтруем пользователей, которые используют zsh
  ansible.builtin.set_fact:
    zsh_users: >-
      {{
        all_users
        | selectattr('shell', 'defined')
        | selectattr('shell', 'equalto', '/bin/zsh')
        | list
      }}

- name: Проверяем, есть ли .oh-my-zsh
  ansible.builtin.stat:
    path: "{{ item.dir }}/.oh-my-zsh"
  register: ohmyzsh_stat
  loop: "{{ zsh_users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Устанавливаем oh-my-zsh для юзеров, которые используют zsh
  become: true
  ansible.builtin.git:
    repo: "{{ zsh_install_vars.ohmyzsh_repo }}"
    dest: "{{ item.item.dir }}/.oh-my-zsh"
    version: master
  loop: "{{ ohmyzsh_stat.results | selectattr('stat.exists', 'equalto', false) | list }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Копируем шаблон .zshrc
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ item.item.dir }}/.zshrc"
    owner: "{{ item.item.name }}"
    group: "{{ item.item.name }}"
    mode: "0644"
  loop: "{{ ohmyzsh_stat.results | selectattr('stat.exists', 'equalto', false) | list }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Клонируем тему powerlevel10k
  become: true
  ansible.builtin.git:
    repo: "{{ zsh_install_vars.powerlevel10_repo }}"
    dest: "{{ item.item.dir }}/.oh-my-zsh/custom/themes/powerlevel10k"
    version: master
  loop: "{{ ohmyzsh_stat.results | selectattr('stat.exists', 'equalto', false) | list }}"
  loop_control:
    label: "{{ item.item.name }}"

# Костылирую права, из-за проклятого WSL, который не хочет клонировать через become_user
- name: Устанавливаем права на директорию oh-my-zsh для юзеров
  become: true
  ansible.builtin.file:
    path: "{{ item.item.dir }}/.oh-my-zsh"
    owner: "{{ item.item.name }}"
    group: "{{ item.item.name }}"
    recurse: true
  loop: "{{ ohmyzsh_stat.results | selectattr('stat.exists', 'equalto', false) | list }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Создаём директорию для кастомных шрифтов
  become: true
  ansible.builtin.file:
    path: "/usr/share/fonts/truetype/"
    state: directory
    mode: '0755'

- name: Скачиваем шрифты, необходимые для powerlevel10k
  become: true
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "/usr/share/fonts/truetype/{{ item.filename }}"
    mode: "0644"
  loop:
    - { url: "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf", filename: "MesloLGSNF-Regular.ttf"}
    - { url: "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf", filename: "MesloLGSNF-Bold.ttf"}
    - { url: "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf", filename: "MesloLGSNF-Italic.ttf"}
    - { url: "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf", filename: "MesloLGSNF-BoldItalic.ttf"}
  notify: "Refresh font cache"
